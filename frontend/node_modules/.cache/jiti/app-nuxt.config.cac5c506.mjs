"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;
var _viteTsconfigPaths = _interopRequireDefault(await jitiImport("vite-tsconfig-paths"));
var _path = _interopRequireDefault(await jitiImport("path"));function _interopRequireDefault(e) {return e && e.__esModule ? e : { default: e };} // https://nuxt.com/docs/api/configuration/nuxt-config
var _default = exports.default =
defineNuxtConfig({
  compatibilityDate: '2025-07-15',
  devtools: { enabled: true },
  modules: [
  '@nuxt/icon',
  '@nuxt/image',
  '@nuxt/eslint'],

  app: {
    head: {
      charset: 'utf-8',
      htmlAttrs: {
        lang: 'ru'
      }
    }
  },
  css: [
  "~/assets/scss/reset.scss",
  "~/assets/scss/additional.scss"],

  vite: {
    resolve: {
      alias: {
        '@assets': _path.default.resolve(__dirname, 'assets')
      }
    },
    plugins: [
    (0, _viteTsconfigPaths.default)(),
    {
      name: 'vite-plugin-glob-transform',
      transform(code, id) {
        if (id.includes('nuxt-icons')) {
          return code.replace(/as:\s*['"]raw['"]/g, 'query: "?raw", import: "default"');
        }
        return code;
      }
    }],

    css: {
      preprocessorOptions: {
        scss: {
          api: 'modern-compiler',
          silenceDeprecations: ["legacy-js-api"],
          additionalData: `
              @use "~/assets/scss/runtime/modules.scss" as *; 
              @use '~/assets/scss/runtime/mixins' as *;
          `

        }
      }
    },
    server: {
      watch: {
        usePolling: true,
        interval: 500
      }
    }
  },
  watchers: {
    webpack: {
      aggregateTimeout: 500
    }
  }
}); /* v9-adbcf789352e319a */
